generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                                     String?            @db.Uuid
  id                                              String             @id @db.Uuid
  aud                                             String?            @db.VarChar(255)
  role                                            String?            @db.VarChar(255)
  email                                           String?            @db.VarChar(255)
  encrypted_password                              String?            @db.VarChar(255)
  email_confirmed_at                              DateTime?          @db.Timestamptz(6)
  invited_at                                      DateTime?          @db.Timestamptz(6)
  confirmation_token                              String?            @db.VarChar(255)
  confirmation_sent_at                            DateTime?          @db.Timestamptz(6)
  recovery_token                                  String?            @db.VarChar(255)
  recovery_sent_at                                DateTime?          @db.Timestamptz(6)
  email_change_token_new                          String?            @db.VarChar(255)
  email_change                                    String?            @db.VarChar(255)
  email_change_sent_at                            DateTime?          @db.Timestamptz(6)
  last_sign_in_at                                 DateTime?          @db.Timestamptz(6)
  raw_app_meta_data                               Json?
  raw_user_meta_data                              Json?
  is_super_admin                                  Boolean?
  created_at                                      DateTime?          @db.Timestamptz(6)
  updated_at                                      DateTime?          @db.Timestamptz(6)
  phone                                           String?            @unique
  phone_confirmed_at                              DateTime?          @db.Timestamptz(6)
  phone_change                                    String?            @default("")
  phone_change_token                              String?            @default("") @db.VarChar(255)
  phone_change_sent_at                            DateTime?          @db.Timestamptz(6)
  confirmed_at                                    DateTime?          @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                      String?            @default("") @db.VarChar(255)
  email_change_confirm_status                     Int?               @default(0) @db.SmallInt
  banned_until                                    DateTime?          @db.Timestamptz(6)
  reauthentication_token                          String?            @default("") @db.VarChar(255)
  reauthentication_sent_at                        DateTime?          @db.Timestamptz(6)
  is_sso_user                                     Boolean            @default(false)
  deleted_at                                      DateTime?          @db.Timestamptz(6)
  is_anonymous                                    Boolean            @default(false)
  identities                                      identities[]
  mfa_factors                                     mfa_factors[]
  one_time_tokens                                 one_time_tokens[]
  sessions                                        sessions[]
  pantry_items                                    pantry_items[]
  ShoppingListItem                                ShoppingListItem[]
  user_preferences_user_preferences_userIdTousers user_preferences[] @relation("user_preferences_userIdTousers")
  user_preferences_user_preferences_useridTousers user_preferences?  @relation("user_preferences_useridTousers")
  weekly_plans                                    weekly_plans[]
  custom_recipes                                  custom_recipes[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String    @unique
  name      String?
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model analyses {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  pulse_id   String?
  content    String
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  pulses     pulses?   @relation(fields: [pulse_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([pulse_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model heartbeat_users {
  id         Int       @id @default(autoincrement())
  email      String?   @unique
  name       String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  pulses     pulses[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pantry_items {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  itemName       String    @map("\"itemName\"")
  userid         String    @db.Uuid
  category       String?
  quantity       Float?
  unit           String?
  expirationDate DateTime? @map("\"expirationDate\"") @db.Date
  notes          String?
  createdAt      DateTime? @default(now()) @map("\"createdAt\"") @db.Timestamptz(6)
  updatedAt      DateTime? @default(now()) @map("\"updatedAt\"") @db.Timestamptz(6)
  users          users?    @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([itemName], map: "idx_pantry_items_name")
  @@index([userid], map: "idx_pantry_items_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pulses {
  id               String           @id
  user_id          Int?             @default(1)
  name             String?
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  emails           Json
  response_count   Int?             @default(0)
  last_checked     DateTime?        @default(now()) @db.Timestamptz(6)
  has_analysis     Boolean?         @default(false)
  analysis_content String?
  pending_emails   Json?            @default("[]")
  sent_emails      Json?            @default("[]")
  analyses         analyses[]
  heartbeat_users  heartbeat_users? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  responses        responses[]

  @@index([user_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model responses {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  pulse_id      String?
  response      String
  timestamp     DateTime? @default(now()) @db.Timestamptz(6)
  respondent_id String?
  pulses        pulses?   @relation(fields: [pulse_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([pulse_id])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_preferences {
  id                                   String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userid                               String?   @unique @db.Uuid
  isVegetarian                         Boolean?  @default(false) @map("\"isVegetarian\"")
  isVegan                              Boolean?  @default(false) @map("\"isVegan\"")
  isGlutenFree                         Boolean?  @default(false) @map("\"isGlutenFree\"")
  isDairyFree                          Boolean?  @default(false) @map("\"isDairyFree\"")
  isNutFree                            Boolean?  @default(false) @map("\"isNutFree\"")
  spicyPreference                      Int?      @default(5) @map("\"spicyPreference\"")
  sweetPreference                      Int?      @default(5) @map("\"sweetPreference\"")
  savoryPreference                     Int?      @default(5) @map("\"savoryPreference\"")
  maxCookingTime                       Int?      @map("\"maxCookingTime\"")
  cookingSkillLevel                    String?   @default("intermediate") @map("\"cookingSkillLevel\"")
  peopleCount                          Int?      @default(1) @map("\"peopleCount\"")
  cuisinePreferences                   Json?     @default("[]") @map("\"cuisinePreferences\"")
  flavorPreferences                    Json?     @default("[]") @map("\"flavorPreferences\"")
  healthGoals                          Json?     @default("[]") @map("\"healthGoals\"")
  allergies                            Json?     @default("[]")
  sustainabilityPreference             String?   @default("medium") @map("\"sustainabilityPreference\"")
  nutritionFocus                       Json?     @default("[]") @map("\"nutritionFocus\"")
  calorieTarget                        Int?      @map("\"calorieTarget\"")
  proteinTarget                        Int?      @map("\"proteinTarget\"")
  carbTarget                           Int?      @map("\"carbTarget\"")
  fatTarget                            Int?      @map("\"fatTarget\"")
  rawQuizAnswers                       Json?     @map("\"rawQuizAnswers\"")
  createdAt                            DateTime? @default(now()) @map("\"createdAt\"") @db.Timestamptz(6)
  updatedAt                            DateTime? @default(now()) @map("\"updatedAt\"") @db.Timestamptz(6)
  cuisine                              String?   @default("Any")
  users_user_preferences_userIdTousers users?    @relation("user_preferences_userIdTousers", fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_user_preferences_useridTousers users?    @relation("user_preferences_useridTousers", fields: [userid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  userId                               String?   @db.Uuid

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model weekly_plan_recipes {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  weeklyPlanId String       @db.Uuid @map("\"weeklyPlanId\"")
  recipeData   Json         @map("\"recipeData\"")
  plannedDate  DateTime?    @db.Date @map("\"plannedDate\"")
  mealType     String?      @map("\"mealType\"")
  createdAt    DateTime?    @default(now()) @map("\"createdAt\"") @db.Timestamptz(6)
  updatedAt    DateTime?    @default(now()) @map("\"updatedAt\"") @db.Timestamptz(6)
  weekly_plans weekly_plans @relation(fields: [weeklyPlanId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_weekly_plan")

  @@index([weeklyPlanId], map: "idx_weekly_plan_recipes_plan_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model weekly_plans {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid              String                @db.Uuid
  weekStartDate       DateTime              @db.Date @map("\"weekStartDate\"")
  createdAt           DateTime?             @default(now()) @map("\"createdAt\"") @db.Timestamptz(6)
  updatedAt           DateTime?             @default(now()) @map("\"updatedAt\"") @db.Timestamptz(6)
  weekly_plan_recipes weekly_plan_recipes[]
  users               users                 @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_auth_user_weekly_plans")

  @@index([userid], map: "idx_weekly_plans_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ShoppingListItem {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String
  category  String    @default("Other")
  quantity  Float     @default(1)
  unit      String    @default("item")
  isChecked Boolean   @default(false)
  userId    String    @db.Uuid
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([userId], map: "idx_shopping_list_items_user_id")
  @@index([category], map: "idx_shopping_list_items_category")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model custom_recipes {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId       String    @db.Uuid
  name         String
  ingredients  Json      @default("[]")
  instructions Json      @default("[]")
  cuisine      String?
  description  String?
  difficulty   String?
  time         String?
  createdAt    DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime? @default(now()) @db.Timestamptz(6)
  users        users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([userId], map: "idx_custom_recipes_user_id")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}
